#!/bin/bash
# Produce md5sums for all files in a specified directory. It will spit the results out to STDOUT, ready to be redirected somewhere, meanfile progress goes out to STDERR so that you can keep track.
# Syntax:
# md5Everything /path/to/directory [lastFinishedFile]
#
# /path/to/directory is the path that you want to recursively scan.
# lastFinishedFile is the last file that has been successfully scanned. You can use this to continue where you left off.


directory="$1"
lastFinishedFile="$2"
tmpFile="/tmp/$$-md5Everything"

if [ "$directory" == '' ]; then
    head "$0" | grep '#' | cut -b 3-
    exit 1
fi

if [ ! -e "$directory" ]; then
    echo "Could not find \"$directory\"."
    exit 1
fi

cd "$directory" || exit 1

function status
{
    echo "$1" >&2
}

function showProgress
{
    position="$1"
    total="$2"
    fileName="$3"
    justFile="$(basename "$fileName")"

    size="$(du -sh "$fileName" | awk '{print $1}')"

    let percent=$position*100
    let percent=$percent/$total

    echo -en "  $position/$total = $percent%  $size  $justFile                \r" >&2
}


status "Getting file list."
if [ "$lastFinishedFile" == '' ]; then
    find -type f > "$tmpFile"
else
    find -type f | grep -A100000000 "$lastFinishedFile" | tail -n+2 > "$tmpFile"
fi

numberOfFiles="$(cat "$tmpFile" | wc -l)"

status "Files to sum: $numberOfFiles"

status "Doing the sums."

let progress=0
while read file; do
    let progress=$progress+1
    showProgress "$progress" "$numberOfFiles" "$file"
    md5sum "$file"
done < <(cat "$tmpFile")

rm -f "$tmpFile"
